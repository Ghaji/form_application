<?php
//Random string
function genRndString($length = 10, $chars = '1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ')
{
    if($length > 0)
    {
        $len_chars = (strlen($chars) - 1);
        $the_chars = $chars{rand(0, $len_chars)};
        for ($i = 1; $i < $length; $i = strlen($the_chars))
        {
            $r = $chars{rand(0, $len_chars)};
            if ($r != $the_chars{$i - 1}) $the_chars .=  $r;
        }

        return $the_chars;
    }
}

?>

<?php
//display random string
echo genRndString();
?>


<?php
//detect ajax
if(!isset($_SERVER['HTTP_X_REQUESTED_WITH']) AND strtolower($_SERVER['HTTP_X_REQUESTED_WITH']) != 'xmlhttprequest') {
   
   die('Request must come from Ajax!');
   
}
?>


<?php
//display images from directory
$folder_path = 'images/'; //image folder path

$folder = opendir($folder_path);

 while (false !== ($entry = readdir($folder))) {
    if ($entry != "." && $entry != ".." && $entry != "Thumb.db") {
       
        $file_path = $folder_path.$entry;
        $ext = strtolower(pathinfo($file_path, PATHINFO_EXTENSION));
        if($ext=='jpg' || $ext =='png' || $ext == 'gif')
        {
            echo '<img src="'.$file_path.'" />';
        }
    }
}

closedir($folder );
?>


<?php // display source code
$folder_path = 'images/';

    $files = glob($folder_path . "*.{JPG,jpg,gif,png,bmp}", GLOB_BRACE);

    foreach($files as $file){
       echo '<img src="'.$file.'" />';
    }
?>




<?php
//RSS feed 
$mysql_host = 'localhost'; //host
$mysql_username = 'root'; //username
$mysql_password = ''; //password
$mysql_database = 'test'; //db

header('Content-Type: text/xml; charset=utf-8', true); //set document header content type to be XML

$rss = new SimpleXMLElement('<rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom"></rss>');
$rss->addAttribute('version', '2.0');

$channel = $rss->addChild('channel'); //add channel node

$atom = $rss->addChild('atom:atom:link'); //add atom node
$atom->addAttribute('href', 'http://localhost'); //add atom node attribute
$atom->addAttribute('rel', 'self');
$atom->addAttribute('type', 'application/rss+xml');

$title = $rss->addChild('title','Sanwebe'); //title of the feed
$description = $rss->addChild('description','description line goes here'); //feed description
$link = $rss->addChild('link','http://www.sanwebe.com'); //feed site
$language = $rss->addChild('language','en-us'); //language

//Create RFC822 Date format to comply with RFC822
$date_f = date("D, d M Y H:i:s T", time());
$build_date = gmdate(DATE_RFC2822, strtotime($date_f));
$lastBuildDate = $rss->addChild('lastBuildDate',$date_f); //feed last build date

$generator = $rss->addChild('generator','PHP Simple XML'); //add generator node


//connect to MySQL - mysqli(HOST, USERNAME, PASSWORD, DATABASE);
$mysqli = new mysqli($mysql_host, $mysql_username, $mysql_password, $mysql_database);

//Output any connection error
if ($mysqli->connect_error) {
    die('Error : ('. $mysqli->connect_errno .') '. $mysqli->connect_error);
}
$results = $mysqli->query("SELECT id, title, content, published FROM site_contents");

if($results){ //we have records
    while($row = $results->fetch_object()) //loop through each row
    {
        $item = $rss->addChild('item'); //add item node
        $title = $item->addChild('title', $row->title); //add title node under item
        $link = $item->addChild('link', 'http://www.your-site.com/link/goes/here/'); //add link node under item
        $guid = $item->addChild('guid', 'http://www.your-site.com/link/goes/here/'. $row->id); //add guid node under item
        $guid->addAttribute('isPermaLink', 'false'); //add guid node attribute
       
        $description = $item->addChild('description', '<![CDATA['. htmlentities($row->content) . ']]>'); //add description
       
        $date_rfc = gmdate(DATE_RFC2822, strtotime($row->published));
        $item = $item->addChild('pubDate', $date_rfc); //add pubDate node
    }
}

echo $rss->asXML(); //output XML

?>









<?php
$mysql_host = 'localhost'; //host
$mysql_username = 'root'; //username
$mysql_password = ''; //password
$mysql_database = 'test'; //db

header('Content-Type: text/xml; charset=utf-8', true); //set document header content type to be XML
$xml = new DOMDocument("1.0", "UTF-8"); // Create new DOM document.

//create "RSS" element
$rss = $xml->createElement("rss");
$rss_node = $xml->appendChild($rss); //add RSS element to XML node
$rss_node->setAttribute("version","2.0"); //set RSS version

//set attributes
$rss_node->setAttribute("xmlns:dc","http://purl.org/dc/elements/1.1/"); //xmlns:dc (info http://j.mp/1mHIl8e )
$rss_node->setAttribute("xmlns:content","http://purl.org/rss/1.0/modules/content/"); //xmlns:content (info http://j.mp/1og3n2W)
$rss_node->setAttribute("xmlns:atom","http://www.w3.org/2005/Atom");//xmlns:atom (http://j.mp/1tErCYX )

//Create RFC822 Date format to comply with RFC822
$date_f = date("D, d M Y H:i:s T", time());
$build_date = gmdate(DATE_RFC2822, strtotime($date_f));

//create "channel" element under "RSS" element
$channel = $xml->createElement("channel");  
$channel_node = $rss_node->appendChild($channel);
 
//a feed should contain an atom:link element (info http://j.mp/1nuzqeC)
$channel_atom_link = $xml->createElement("atom:link");  
$channel_atom_link->setAttribute("href","http://localhost"); //url of the feed
$channel_atom_link->setAttribute("rel","self");
$channel_atom_link->setAttribute("type","application/rss+xml");
$channel_node->appendChild($channel_atom_link);

//add general elements under "channel" node
$channel_node->appendChild($xml->createElement("title", "Sanwebe")); //title
$channel_node->appendChild($xml->createElement("description", "description line goes here"));  //description
$channel_node->appendChild($xml->createElement("link", "http://www.sanwebe.com")); //website link
$channel_node->appendChild($xml->createElement("language", "en-us"));  //language
$channel_node->appendChild($xml->createElement("lastBuildDate", $build_date));  //last build date
$channel_node->appendChild($xml->createElement("generator", "PHP DOMDocument")); //generator

//Fetch records from the database
//connect to MySQL - mysqli(HOST, USERNAME, PASSWORD, DATABASE);
$mysqli = new mysqli($mysql_host, $mysql_username, $mysql_password, $mysql_database);

//Output any connection error
if ($mysqli->connect_error) {
    die('Error : ('. $mysqli->connect_errno .') '. $mysqli->connect_error);
}

//MySQL query, we pull records from site_contents table
$results = $mysqli->query("SELECT id, title, content, published FROM site_contents");

if($results){ //we have records
    while($row = $results->fetch_object()) //loop through each row
    {
      $item_node = $channel_node->appendChild($xml->createElement("item")); //create a new node called "item"
      $title_node = $item_node->appendChild($xml->createElement("title", $row->title)); //Add Title under "item"
      $link_node = $item_node->appendChild($xml->createElement("link", "http://www.your-site.com/link/goes/here/")); //add link node under "item"
     
      //Unique identifier for the item (GUID)
      $guid_link = $xml->createElement("guid", "http://www.your-site.com/link/goes/here/". $row->id);  
      $guid_link->setAttribute("isPermaLink","false");
      $guid_node = $item_node->appendChild($guid_link);
     
      //create "description" node under "item"
      $description_node = $item_node->appendChild($xml->createElement("description"));  
     
      //fill description node with CDATA content
      $description_contents = $xml->createCDATASection(htmlentities($row->content));  
      $description_node->appendChild($description_contents);
   
      //Published date
      $date_rfc = gmdate(DATE_RFC2822, strtotime($row->published));
      $pub_date = $xml->createElement("pubDate", $date_rfc);  
      $pub_date_node = $item_node->appendChild($pub_date);

    }
}
echo $xml->saveXML();
?>



<?php
function grab_remote_pic($new_file_name, $local_dir_path, $remote_picture_url)
{
    if(!is_dir($local_dir_path)){ //create new dir if doesn't exist
        mkdir($local_dir_path);
    }
    $local_file_path = $local_dir_path .'/'.$new_file_name;
    if(copy($remote_picture_url, $local_file_path))
    {
        return true;
    }
}




//grab_remote_pic(NEW FILE NAME, LOCAL SAVE PATH, REMOTE IMAGE URL)
grab_remote_pic('new_file_name.gif', 'home/path/to/local/images/', 'http://graph.facebook.com/1442161041/picture?width=120&height=120');


?>




